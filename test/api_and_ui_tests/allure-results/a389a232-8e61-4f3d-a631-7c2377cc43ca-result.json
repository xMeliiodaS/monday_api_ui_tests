{"name": "test_post_new_default_task", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome=127.0.6533.100); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n\tGetHandleVerifier [0x00878923+23283]\n\t(No symbol) [0x0083E934]\n\t(No symbol) [0x00770733]\n\t(No symbol) [0x007760DF]\n\t(No symbol) [0x00777D0F]\n\t(No symbol) [0x007ED74B]\n\t(No symbol) [0x007D441C]\n\t(No symbol) [0x007ECB8D]\n\t(No symbol) [0x007D41B6]\n\t(No symbol) [0x007A8017]\n\t(No symbol) [0x007A890D]\n\tGetHandleVerifier [0x0096A5E3+1013683]\n\tGetHandleVerifier [0x00973E3C+1052684]\n\tGetHandleVerifier [0x0096D4A4+1025652]\n\tGetHandleVerifier [0x0089EA2B+179195]\n\t(No symbol) [0x00846833]\n\t(No symbol) [0x00843198]\n\t(No symbol) [0x00843337]\n\t(No symbol) [0x0083B4BE]\n\tBaseThreadInitThunk [0x75D8FCC9+25]\n\tRtlGetAppContainerNamedObjectPath [0x772980CE+286]\n\tRtlGetAppContainerNamedObjectPath [0x7729809E+238]", "trace": "self = <test.api_and_ui_tests.test_create_new_tasks.TestCreateNewTask testMethod=test_post_new_default_task>\n\n    def test_post_new_default_task(self):\n        \"\"\"\n        Tests the creation of a new default task by sending a POST\n         request and verifying its appearance on the board.\n        \"\"\"\n        default_task_payload = DefaultItemPayload()\n    \n        # Act\n        self.new_task.post_create_item(default_task_payload)\n    \n>       self.base_page_app.click_on_the_board_side_bar_button()\n\ntest_create_new_tasks.py:54: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\logic\\logic_ui\\base_page_app.py:33: in click_on_the_board_side_bar_button\n    WebDriverWait(self._driver, 10).until(\nC:\\Users\\User\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:96: in until\n    value = method(self._driver)\nC:\\Users\\User\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py:364: in _predicate\n    element = visibility_of(target)(driver)\nC:\\Users\\User\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py:173: in _predicate\n    return _element_if_visible(element)\nC:\\Users\\User\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py:179: in _element_if_visible\n    return element if element.is_displayed() == visibility else False\nC:\\Users\\User\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:252: in is_displayed\n    return self.parent.execute_script(f\"/* isDisplayed */return ({isDisplayed_js}).apply(null, arguments);\", self)\nC:\\Users\\User\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:414: in execute_script\n    return self.execute(command, {\"script\": script, \"args\": converted_args})[\"value\"]\nC:\\Users\\User\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001BACBAAFAD0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x772980CE+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x7729809E+238]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\nE         (Session info: chrome=127.0.6533.100); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00878923+23283]\nE       \t(No symbol) [0x0083E934]\nE       \t(No symbol) [0x00770733]\nE       \t(No symbol) [0x007760DF]\nE       \t(No symbol) [0x00777D0F]\nE       \t(No symbol) [0x007ED74B]\nE       \t(No symbol) [0x007D441C]\nE       \t(No symbol) [0x007ECB8D]\nE       \t(No symbol) [0x007D41B6]\nE       \t(No symbol) [0x007A8017]\nE       \t(No symbol) [0x007A890D]\nE       \tGetHandleVerifier [0x0096A5E3+1013683]\nE       \tGetHandleVerifier [0x00973E3C+1052684]\nE       \tGetHandleVerifier [0x0096D4A4+1025652]\nE       \tGetHandleVerifier [0x0089EA2B+179195]\nE       \t(No symbol) [0x00846833]\nE       \t(No symbol) [0x00843198]\nE       \t(No symbol) [0x00843337]\nE       \t(No symbol) [0x0083B4BE]\nE       \tBaseThreadInitThunk [0x75D8FCC9+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x772980CE+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x7729809E+238]\n\nC:\\Users\\User\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: StaleElementReferenceException"}, "description": "\n        Tests the creation of a new default task by sending a POST\n         request and verifying its appearance on the board.\n        ", "start": 1723397667173, "stop": 1723397680985, "uuid": "d41f1201-e685-4096-9c51-ebe501e57cdd", "historyId": "4ec14df4dd702252f967db9115598678", "testCaseId": "4ec14df4dd702252f967db9115598678", "fullName": "test_create_new_tasks.TestCreateNewTask#test_post_new_default_task", "labels": [{"name": "suite", "value": "test_create_new_tasks"}, {"name": "subSuite", "value": "TestCreateNewTask"}, {"name": "host", "value": "DESKTOP-IGNAR84"}, {"name": "thread", "value": "6348-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_create_new_tasks"}]}