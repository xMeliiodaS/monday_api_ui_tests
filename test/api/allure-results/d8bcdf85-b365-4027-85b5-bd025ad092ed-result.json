{"name": "test_post_new_default_task", "status": "failed", "statusDetails": {"message": "AssertionError: 200 != 201 : Expected status code 200 but got {response.status_code}", "trace": "self = <test.api.test_create_item_api.TestCreateItemAPI testMethod=test_post_new_default_task>\n\n    def test_post_new_default_task(self):\n        \"\"\"\n        Tests the creation of a new default task by sending a POST request and verifying the response.\n    \n        Checks if the response status code is 200, the response JSON contains\n         'data', and the 'id' field in the response is present and not None.\n        \"\"\"\n        # Arrange\n        self.api_request = APIWrapper()\n        self.config = ConfigProvider.load_config_json()\n    \n        create_task_payload = DefaultItemPayload()\n        create_task = CreateItem(self.api_request)\n    \n        # Act\n        response = create_task.post_create_item(create_task_payload)\n        self.item_id = response.data['data']['create_item']['id']\n    \n        # Assert\n        try:\n>           self.assertEqual(response.status, 201, \"Expected status code 200 but got {response.status_code}\")\nE           AssertionError: 200 != 201 : Expected status code 200 but got {response.status_code}\n\ntest_create_item_api.py:42: AssertionError"}, "description": "\n        Tests the creation of a new default task by sending a POST request and verifying the response.\n\n        Checks if the response status code is 200, the response JSON contains\n         'data', and the 'id' field in the response is present and not None.\n        ", "start": 1723397605093, "stop": 1723397609851, "uuid": "9aa4be13-460b-4469-962c-e667f910affb", "historyId": "483d124b5044ba5ea8f9dacaa12714d2", "testCaseId": "483d124b5044ba5ea8f9dacaa12714d2", "fullName": "test_create_item_api.TestCreateItemAPI#test_post_new_default_task", "labels": [{"name": "suite", "value": "test_create_item_api"}, {"name": "subSuite", "value": "TestCreateItemAPI"}, {"name": "host", "value": "DESKTOP-IGNAR84"}, {"name": "thread", "value": "6312-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_create_item_api"}]}